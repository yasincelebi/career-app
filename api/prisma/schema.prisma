// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @unique @default(uuid())
  email        String        @unique
  password     String
  name         String?
  exprerinces  Experience[]
  projects     Project[]
  educations   Education[]
  skills       Skill[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  contact      Contact?
  certificates Certificate[]
  company      Company?      @relation(fields: [companyId], references: [id])
  companyId    String?
}

model Experience {
  id          String   @id @unique @default(uuid())
  userId      String
  company     Company  @relation(fields: [companyId], references: [id])
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  companyId   String
}

model Project {
  id          String   @id @unique @default(uuid())
  userId      String
  title       String
  description String
  link        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model Education {
  id        String   @id @unique @default(uuid())
  userId    String
  school    String?
  degree    String?
  field     String?
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Skill {
  id        String   @id @unique @default(uuid())
  userId    String
  name      String
  level     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Certificate {
  id          String   @id @unique @default(uuid())
  userId      String
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  company     Company? @relation(fields: [companyId], references: [id])
  companyId   String
}

model Company {
  id           String        @id @unique @default(uuid())
  name         String?
  description  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  contact     Contact?     @relation(fields: [contactId], references: [id])
  jobs         Job[]
  users        User[]
  certificates Certificate[]
  Experience   Experience[]
  contactId    String?
}

model Job {
  id          String   @id @unique @default(uuid())
  companyId   String
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  company     Company  @relation(fields: [companyId], references: [id])
}

model Contact {
  id        String   @id @unique @default(uuid())
  userId    String   @unique
  email     String
  phone     String
  website   String
  github    String
  linkedin  String
  facebook  String
  twitter   String
  instagram String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  company  Company? 
}
